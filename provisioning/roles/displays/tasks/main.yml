---
- name: Update /etc/hostname file
  action: lineinfile dest=/etc/hostname regexp=.* line={{display_hostname}} create=yes
  become: yes
  tags: setup, hostname

- name: Ensure that the permissions to .ssh directory are correct.
  file:
    path: /home/deploy/.ssh
    recurse: yes
    owner: deploy
    group: deploy
    state: directory
  become: yes
  tags: setup

- name: add public key to this user to support passwordless ssh
  authorized_key: user={{ user }} key="{{item}}"
  with_file:
    - "{{ git_ssh_pub_key }}"
    - "{{ jenkins_key_file }}"
  tags: setup

- name: Make a copy of security repos
  shell: cat /etc/apt/sources.list|grep secu >/etc/apt/security.sources.list
  become: yes
  tags: setup, security

- name: Update cache
  apt: update_cache=yes
  become: yes
  tags: setup, security

- name: Install security updates
  shell: apt upgrade -oDir::Etc::SourceList=/etc/apt/security.sources.list --force-yes -y
  become: yes
  tags: setup, security

- name: Setup the Git repo
  git: repo={{ git_repo }}
       version={{ git_branch }}
       dest={{ project_path }}
       accept_hostkey=yes
       key_file="{{ git_ssh_priv_key }}"
  when: setup_git_repo is defined and setup_git_repo
  tags: deploy

#- name: Ensure that the application file permissions are set properly
#  file: path={{ project_path }}
#    recurse=yes
#    owner=deploy
#    group=deploy
#    state=directory
#  tags: deploy

- block:
    - name: Check if apport daemon is installed
      command: dpkg -s apport
      register: apport_installed
      failed_when: apport_installed.rc > 1
      changed_when: False
      check_mode: False
      become: yes

    - block:
        - name: Deactivate apport daemon crash report collection
          lineinfile: dest=/etc/default/apport regexp="^enabled" line="enabled=0" state=present
          become: yes

        - name: Ensure apport daemon is stopped and disabled
          service: name=apport state=stopped enabled=false
          become: yes
      when: apport_installed.rc == 0
  when: _disable_crash_reporters.disable_apport
  tags: reports

- name: run npm install
  shell: npm install
  register: npm_finished
  failed_when: '"ERR!" in npm_finished.stderr'
  args:
    chdir: "{{ project_src_root }}"
  tags: deploy

- name: Copy env configuration in place.
  template:
    src: "{{ env_template }}"
    dest: "{{ env_file_path }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0644
  tags: deploy, setup

- name: build background
  shell: cd {{ project_src_root }} && npm run build:background:{{ background_type }}
  tags: background

- name: Run npm start.
  shell: cd {{ project_src_root }}; npm run kill; npm run start;
  environment:
    DISPLAY: ':0.0'
  tags: setup, deploy

- name: restart machine
  become: yes
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  ignore_errors: true
  tags: restart

- name: "Wait for reboot"
  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 delay=10 state=started
  become: false
  tags: restart

- name: Run xrandr to rotate the screens correctly.
  shell: xrandr -o left -s 1920x1080
  environment:
    DISPLAY: ':0.0'
  tags: rotate